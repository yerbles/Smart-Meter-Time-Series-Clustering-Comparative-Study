{
"subset": {
    "Average Power": {
      "complexity": "constant",
      "description": "Computes the average power of the signal.",
      "function": "tsfel.average_power",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "Area under the curve": {
      "complexity": "log",
      "description": "Computes the area under the curve of the signal computed with trapezoid rule.",
      "function": "tsfel.auc",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Positive turning points": {
      "complexity": "constant",
      "description": "Computes number of positive turning points of the signal.",
      "function": "tsfel.positive_turning",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "emg"
    },
    "Peak to peak distance": {
      "complexity": "constant",
      "description": "Computes the peak to peak distance.",
      "function": "tsfel.pk_pk_distance",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Absolute energy": {
      "complexity": "log",
      "description": "Computes the absolute energy of the signal.",
      "function": "tsfel.abs_energy",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "Autocorrelation": {
      "complexity": "constant",
      "description": "Computes autocorrelation of the signal.",
      "function": "tsfel.autocorr",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "inertial"
    },
    "Centroid": {
      "complexity": "constant",
      "description": "Computes the centroid along the time axis.",
      "function": "tsfel.calc_centroid",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Entropy": {
      "complexity": "log",
      "description": "Computes the entropy of the signal using the Shannon Entropy.",
      "function": "tsfel.entropy",
      "parameters": {
        "prob": "standard"
      },
      "n_features": 1,
      "use": "yes",
      "tag": "eeg"
    },
    "Human range energy": {
      "complexity": "log",
      "description": "Computes the human range energy ratio given by the ratio between the energy in frequency 0.6-2.5Hz and the whole energy band.",
      "function": "tsfel.human_range_energy",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "inertial"
    },
    "Interquartile range": {
      "complexity": "constant",
      "description": "Computes interquartile range of the signal.",
      "function": "tsfel.interq_range",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Kurtosis": {
      "complexity": "constant",
      "description": "Computes kurtosis of the signal.",
      "function": "tsfel.kurtosis",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Skewness": {
      "complexity": "constant",
      "description": "Computes skewness of the signal.",
      "function": "tsfel.skewness",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Mean": {
      "complexity": "constant",
      "description": "Computes the mean value of the signal.",
      "function": "tsfel.calc_mean",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "inertial"
    },
    "Variance": {
      "complexity": "constant",
      "description": "Computes variance of the signal.",
      "function": "tsfel.calc_var",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Wavelet entropy": {
        "complexity": "linear",
        "description": "Computes CWT entropy of the signal.",
        "function": "tsfel.wavelet_entropy",
        "parameters": {
            "fs": 100,
            "max_width": 10,
            "wavelet": "mexh"
        },
        "tag": "eeg",
        "n_features": "max_width",
        "use": "yes"
    },
    "Zero crossing rate": {
      "complexity": "constant",
      "description": "Computes Zero-crossing rate of the signal.",
      "function": "tsfel.zero_cross",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": [
        "audio",
        "emg"
      ]
    },
"Wavelet absolute mean": {
      "complexity": "linear",
      "description": "Computes CWT absolute mean value of each wavelet scale.",
      "function": "tsfel.wavelet_abs_mean",
      "parameters": {
          "fs": 100,
          "max_width": 10,
          "wavelet": "mexh"
      },
      "tag": [
          "eeg",
          "ecg"
      ],
      "n_features": "max_width",
      "use": "yes"
    },
    "Max": {
      "complexity": "constant",
      "description": "Computes the maximum value of the signal.",
      "function": "tsfel.calc_max",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Maximum frequency": {
      "complexity": "log",
      "description": "Computes the maximum frequency.",
      "function": "tsfel.max_frequency",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Max power spectrum": {
      "complexity": "log",
      "description": "Computes the maximum power spectrum density.",
      "function": "tsfel.max_power_spectrum",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Mean absolute deviation": {
      "complexity": "log",
      "description": "Computes mean absolute deviation of the signal.",
      "function": "tsfel.mean_abs_deviation",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Mean absolute diff": {
      "complexity": "constant",
      "description": "Computes mean absolute differences of the signal.",
      "function": "tsfel.mean_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median": {
      "complexity": "constant",
      "description": "Computes median of the signal.",
      "function": "tsfel.calc_median",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median absolute deviation": {
      "complexity": "constant",
      "description": "Computes median absolute deviation of the signal.",
      "function": "tsfel.median_abs_deviation",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median absolute diff": {
      "complexity": "constant",
      "description": "Computes median absolute differences of the signal.",
      "function": "tsfel.median_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Median frequency": {
      "complexity": "log",
      "description": "Computes the median frequency.",
      "function": "tsfel.median_frequency",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Min": {
      "complexity": "constant",
      "description": "Computes the minimum value of the signal.",
      "function": "tsfel.calc_min",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Negative turning points": {
      "complexity": "constant",
      "description": "Computes number of negative turning points of the signal.",
      "function": "tsfel.negative_turning",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": "emg"
    },
    "Power bandwidth": {
      "complexity": "log",
      "description": "Computes power spectrum density bandwidth of the signal.",
      "function": "tsfel.power_bandwidth",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Root mean square": {
      "complexity": "constant",
      "description": "Computes root mean square of the signal.",
      "function": "tsfel.rms",
      "parameters": "",
      "n_features": 1,
      "use": "yes",
      "tag": [
        "emg",
        "inertial"
      ]
    },
    "Signal distance": {
      "complexity": "constant",
      "description": "Computes signal traveled distance.",
      "function": "tsfel.distance",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Slope": {
      "complexity": "log",
      "description": "Computes the slope of the signal by fitting a linear equation to the observed data.",
      "function": "tsfel.slope",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    },
    "Spectral centroid": {
      "complexity": "linear",
      "description": "Computes the barycenter of the spectrum.",
      "function": "tsfel.spectral_centroid",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "Spectral decrease": {
      "complexity": "log",
      "description": "Computes the amount of decreasing of the spectra amplitude.",
      "function": "tsfel.spectral_decrease",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral distance": {
      "complexity": "log",
      "description": "Computes the signal spectral distance.",
      "function": "tsfel.spectral_distance",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral entropy": {
      "complexity": "log",
      "description": "Computes the spectral entropy of the signal based on Fourier transform.",
      "function": "tsfel.spectral_entropy",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "eeg"
    },
    "Spectral kurtosis": {
      "complexity": "linear",
      "description": "Computes the flatness of a distribution around its mean value.",
      "function": "tsfel.spectral_kurtosis",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral positive turning points": {
      "complexity": "log",
      "description": "Computes number of positive turning points of the fft magnitude signal",
      "function": "tsfel.spectral_positive_turning",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral roll-off": {
      "complexity": "log",
      "description": "Computes the frequency where 95% of the signal magnitude is contained below of this value.",
      "function": "tsfel.spectral_roll_off",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes",
      "tag": "audio"
    },
    "Spectral skewness": {
      "complexity": "linear",
      "description": "Computes the asymmetry of a distribution around its mean value.",
      "function": "tsfel.spectral_skewness",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral slope": {
      "complexity": "log",
      "description": "Computes the spectral slope, obtained by linear regression of the spectral amplitude.",
      "function": "tsfel.spectral_slope",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral spread": {
      "complexity": "linear",
      "description": "Computes the spread of the spectrum around its mean value.",
      "function": "tsfel.spectral_spread",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Spectral variation": {
      "complexity": "log",
      "description": "Computes the amount of variation of the spectrum along time.",
      "function": "tsfel.spectral_variation",
      "parameters": {
        "fs": 100
      },
      "n_features": 1,
      "use": "yes"
    },
    "Sum absolute diff": {
      "complexity": "constant",
      "description": "Computes sum of absolute differences of the signal.",
      "function": "tsfel.sum_abs_diff",
      "parameters": "",
      "n_features": 1,
      "use": "yes"
    }
  }
}
